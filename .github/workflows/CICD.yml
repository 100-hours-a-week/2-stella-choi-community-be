name: CI/CD

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Create .env.production
        if: github.ref_name == 'main'
        run: echo "${{ secrets.PROD_ENV }}" > .env.production

      - name: Create .env.develop
        if: github.ref_name == 'develop'
        run: echo "${{ secrets.DEV_ENV }}" > .env.local

      - name: Build and push Docker image
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            docker buildx build \
              --platform linux/amd64 \
              --push \
              -f Dockerfile \
              -t ghcr.io/choiyoorim/community-be:latest .
          else
            docker buildx build \
              --platform linux/amd64 \
              --push \
              -f DockerfileLocal \
              -t ghcr.io/choiyoorim/community-be:develop .
          fi

  deploy:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    steps:
      - name: Prepare SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | base64 --decode > key.pem
          chmod 600 key.pem

      - name: SSH into EC2 and pull/run container
        run: |
          HOST=${{ secrets.EC2_HOST }}
          USER=${{ secrets.EC2_USER }}

          if [ "${{ github.ref_name }}" == "main" ]; then
            ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST "docker rm -f community-be || true"
            ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST "docker login ghcr.io -u choiyoorim -p ${{ secrets.GHCR_PAT }}"
            ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST "docker pull ghcr.io/choiyoorim/community-be:latest"
            ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST "docker run -d --name community-be -p 8080:8080 ghcr.io/choiyoorim/community-be:latest"
          else
            ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST "docker rm -f community-be-develop || true"
            ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST "docker login ghcr.io -u choiyoorim -p ${{ secrets.GHCR_PAT }}"
            ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST "docker pull ghcr.io/choiyoorim/community-be:develop"
            ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST "docker run -d --name community-be-develop -p 8081:8080 ghcr.io/choiyoorim/community-be:develop"
          fi
